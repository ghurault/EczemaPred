% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{add_broken_pointline}
\alias{add_broken_pointline}
\title{Add broken pointline to ggplot}
\usage{
add_broken_pointline(df, aes_x = "x", aes_y = "y", size = 1, ...)
}
\arguments{
\item{df}{Data with columns \code{aes_x} and \code{aes_y}.}

\item{aes_x}{Name of the \code{x} aesthetic.}

\item{aes_y}{Name of the \code{y} aesthetic.}

\item{size}{Size of the line and the points.}

\item{...}{Other aesthetics to pass to \code{\link[ggplot2:aes_]{ggplot2::aes_()}}.
Valid aesthetics are the aesthetics for \code{\link[ggplot2:geom_path]{ggplot2::geom_path()}} and \code{\link[ggplot2:geom_point]{ggplot2::geom_point()}} (except \code{size} that is fixed).
NB: if we want the colour to change with \code{Group} we would need to add \code{colour = as.name(Group)}.}
}
\value{
List to add to ggplot.
}
\description{
Add broken pointline to ggplot
}
\examples{
library(dplyr)
library(ggplot2)

df1 <- tibble(x = 1:100, y = cumsum(rnorm(100))) \%>\%
  slice_sample(prop = .8) \%>\%
  arrange(x)

ggplot() +
  add_broken_pointline(df1) +
  theme_bw(base_size = 15)

df2 <- mutate(df1, Group = case_when(x < 60 ~ "A", TRUE ~ "B"))

ggplot() +
  add_broken_pointline(df2, colour = as.name("Group")) +
  scale_colour_discrete(na.translate = FALSE) +
  theme_bw(base_size = 15)

}
